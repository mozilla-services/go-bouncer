pipeline {
  agent {
    dockerfile {
      dir 'tests/e2e'
    }
  }
  libraries {
    lib('fxtest@1.9')
  }
  options {
    ansiColor('xterm')
    timestamps()
    timeout(time: 5, unit: 'MINUTES')
  }
  environment {
    PYTEST_PROCESSES = "${PYTEST_PROCESSES ?: "auto"}"
    PYTEST_ADDOPTS =
      "-n=${PYTEST_PROCESSES} " +
      "--color=yes"
    PULSE = credentials('PULSE')
  }
  stages {
    stage('Lint') {
      steps {
        sh "flake8 tests/e2e/"
      }
    }
    stage('Test') {
      steps {
        sh "pytest tests/e2e/ --junit-xml=tests/e2e/results/junit.xml" +
        "--html=tests/e2e/results/index.html --self-contained-html " +
        "--log-raw=tests/results/raw.txt" +
        "--log-tbpl=tests/e2e/results/tbpl.txt"
      }
      post {
        always {
          archiveArtifacts 'tests/e2e/results/*'
          junit 'tests/e2e/results/*.xml'
          submitToActiveData('tests/e2e/results/raw.txt')
          submitToTreeherder('go-bouncer', 'T', 'Tests', 'tests/e2e/results/*', 'tests/e2e/results/tbpl.txt')
        }
      }
    }
  }
  post {
    failure {
      emailext(
        attachLog: true,
        attachmentsPattern: 'tests/e2e/results/index.html',
        body: '$BUILD_URL\n\n$FAILED_TESTS',
        replyTo: '$DEFAULT_REPLYTO',
        subject: '$DEFAULT_SUBJECT',
        to: '$DEFAULT_RECIPIENTS')
    }
    changed {
      ircNotification()
    }
  }
}
